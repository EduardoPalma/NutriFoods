@startuml
'https://plantuml.com/class-diagram

class Chromosome
{
Recipes: <color:#C678DD><IList<RecipeDto></color>
Fitness: <color:#C678DD>int</color>
.. Constructor ..
+Chromosome(recipes: <color:#C678DD>IList<RecipeDto></color>)
.. Métodos públicos ..
+ CalculateFitness(targets: <color:#C678DD>IReadOnlyList<NutritionalTargetDto></color>)
}

interface IEvolutionaryOptimizer {
.. Métodos principales ..
+GenerateSolution(universe: <color:#C678DD>IReadOnlyList<RecipeDto></color>, targets: <color:#C678DD>IReadOnlyList<NutritionalTargetDto></color>,
chromosomeSize: <color:#C678DD>int</color>, populationSize: <color:#C678DD>int</color>, maxIterations: <color:#C678DD>int</color>,
selectionMethod: <color:#C678DD>SelectionToken</color>, crossoverMethod: <color:#C678DD>CrossoverToken</color>, mutationMethod: <color:#C678DD>MutationToken</color>) : <color:#C678DD>IList<RecipeDto></color>
+GenerateSolution(universe: <color:#C678DD>IReadOnlyList<RecipeDto></color>, targets: <color:#C678DD>IReadOnlyList<NutritionalTargetDto></color>,
chromosomeSize: <color:#C678DD>int</color>, populationSize: <color:#C678DD>int</color>, maxIterations: <color:#C678DD>int</color>,
selection: <color:#C678DD>Selection</color>, crossover: <color:#C678DD>Crossover</color>, mutation: <color:#C678DD>Mutation</color>) : <color:#C678DD>Task<IList<RecipeDto>></color>
.. Versiones asincrónicas ..
+GenerateSolutionAsync(universe: <color:#C678DD>IReadOnlyList<RecipeDto></color>, targets: <color:#C678DD>IReadOnlyList<NutritionalTargetDto></color>,
chromosomeSize: <color:#C678DD>int</color>, populationSize: <color:#C678DD>int</color>, maxIterations: <color:#C678DD>int</color>,
selectionMethod: <color:#C678DD>SelectionToken</color>, crossoverMethod: <color:#C678DD>CrossoverToken</color>, mutationMethod: <color:#C678DD>MutationToken</color>) : <color:#C678DD>IList<RecipeDto></color>
+GenerateSolutionAsync(universe: <color:#C678DD>IReadOnlyList<RecipeDto></color>, targets: <color:#C678DD>IReadOnlyList<NutritionalTargetDto></color>,
chromosomeSize: <color:#C678DD>int</color>, populationSize: <color:#C678DD>int</color>, maxIterations: <color:#C678DD>int</color>,
selection: <color:#C678DD>Selection</color>, crossover: <color:#C678DD>Crossover</color>, mutation: <color:#C678DD>Mutation</color>) : <color:#C678DD>IList<RecipeDto></color>
}

enum Selection {
.. Propiedades ..
Name: <color:#C678DD>string</color>
Value: <color:#C678DD>int</color>
ReadableName: <color:#C678DD>string</color>
Method: <color:#C678DD>Action<IList<Chromosome>, IList<Chromosome>></color>
.. Variables estáticas ..
+ {static} Tournament: <color:#C678DD>Selection</color>
}

enum Crossover {
.. Propiedades ..
Name: <color:#C678DD>string</color>
Value: <color:#C678DD>int</color>
ReadableName: <color:#C678DD>string</color>
Method: <color:#C678DD>Action<IList<Chromosome>, IList<Chromosome>, int, int, double></color>
.. Variables estáticas ..
+ {static} OnePoint: <color:#C678DD>Crossover</color>
}

enum Mutation {
.. Propiedades ..
Name: <color:#C678DD>string</color>
Value: <color:#C678DD>int</color>
ReadableName: <color:#C678DD>string</color>
Method: <color:#C678DD>Action<IList<Chromosome>, IList<Chromosome>, int, int, double></color>
.. Variables estáticas ..
+ {static} AtRandom: <color:#C678DD>Mutation</color>
}

IEvolutionaryOptimizer <|-- GeneticOptimizer
IEvolutionaryOptimizer ^-- Chromosome: Uses
IEvolutionaryOptimizer ^-- Selection: Uses
IEvolutionaryOptimizer ^-- Crossover: Uses
IEvolutionaryOptimizer ^-- Mutation: Uses


@enduml